apiVersion: v1
kind: Namespace
metadata:
  name: proxy-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy-web-deployment
  namespace: proxy-service
  labels:
    app: proxy-web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: proxy-web
  template:
    metadata:
      labels:
        app: proxy-web
    spec:
      containers:
      - name: proxy-web
        image: proxy-web:latest
        ports:
        - containerPort: 5000
          name: web
        - containerPort: 8888
          name: proxy
        env:
        - name: FLASK_ENV
          value: "production"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: logs-volume
          mountPath: /app/logs
      volumes:
      - name: config-volume
        configMap:
          name: proxy-config
      - name: logs-volume
        emptyDir: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: proxy-web-service
  namespace: proxy-service
  labels:
    app: proxy-web
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 5000
    protocol: TCP
    name: web
  - port: 8888
    targetPort: 8888
    protocol: TCP
    name: proxy
  selector:
    app: proxy-web
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: proxy-config
  namespace: proxy-service
data:
  config.json: |
    {
      "proxy": {
        "default_port": 8888,
        "max_connections": 1000,
        "timeout": 30
      },
      "logging": {
        "level": "INFO",
        "enabled": true
      }
    }
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: proxy-web-ingress
  namespace: proxy-service
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
spec:
  rules:
  - host: proxy.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: proxy-web-service
            port:
              number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: proxy-web-hpa
  namespace: proxy-service
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: proxy-web-deployment
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
