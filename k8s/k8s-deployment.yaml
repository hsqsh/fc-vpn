apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-app
  labels:
    app: backend-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-app
  template:
    metadata:
      labels:
        app: backend-app
    spec:
      containers:
      - name: backend
        image: sihan1196/docker_backend:latest
        ports:
        - containerPort: 8000
        - containerPort: 8888
        env:
        - name: LISTEN_HOST
          value: "0.0.0.0"
        - name: LISTEN_PORT
          value: "8888"
        - name: GO_API_URL
          value: "http://go-api:8080"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
      nodeSelector:
        kubernetes.io/arch: amd64

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-api-app
  labels:
    app: go-api-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go-api-app
  template:
    metadata:
      labels:
        app: go-api-app
    spec:
      containers:
      - name: go-api
        image: sihan1196/docker_go-api:latest
        ports:
        - containerPort: 8080
        env:
        - name: LISTEN_HOST
          value: "0.0.0.0"
        - name: LISTEN_PORT
          value: "8080"
        - name: BACKEND_URL
          value: "http://backend:8000"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      nodeSelector:
        kubernetes.io/arch: amd64

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-app
  labels:
    app: frontend-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-app
  template:
    metadata:
      labels:
        app: frontend-app
    spec:
      containers:
      - name: frontend
        image: sihan1196/fc-vpn-frontend:latest
        ports:
        - containerPort: 80
        env:
        - name: BACKEND_URL
          value: "http://backend:8000"
        - name: GO_API_URL
          value: "http://go-api:8080"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
      nodeSelector:
        kubernetes.io/arch: amd64

---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  selector:
    app: backend-app
  ports:
  - name: api
    port: 8000
    targetPort: 8000
  - name: websocket
    port: 8888
    targetPort: 8888
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: go-api
spec:
  selector:
    app: go-api-app
  ports:
  - name: api
    port: 8080
    targetPort: 8080
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: frontend-app
  ports:
  - name: http
    port: 80
    targetPort: 80
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: go-api
spec:
  selector:
    app: go-api-app
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30090
  type: NodePort
